apiVersion: batch/v1
kind: Job
metadata:
  name: init-job
spec:
  template:
    spec:
      volumes:
        - name: script
          emptyDir: {}
      initContainers:
        - name: wait-for-ready
          imagePullPolicy: Always
          image: bitnami/kubectl:1.20
          command:
            - "kubectl"
          args:
            - "wait"
            - "pod"
            - "-l"
            - "app=peteq-command-service"
            - "--for"
            - "condition=ready"
        - name: create-script
          image: alpine
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /init
              name: script
          command:
            - "sh"
            - "-c"
            - >
              echo -e "
              CREATE TABLE IF NOT EXISTS view_backlog (userid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS view_home (userid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS view_projects (userid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS view_triggers (userid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS view_project (userid text not null, projectid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS repo_users (userid text not null PRIMARY KEY, email text not null, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS repo_lists (userid text not null, listid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS repo_projects (userid text not null, projectid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS repo_tasks (userid text not null, taskid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS repo_triggers (userid text not null, triggerid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS repo_automations (userid text not null, automationid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS repo_trigger_bindings (userid text not null, tbid text not null, triggerid text not null PRIMARY KEY, info json NOT NULL);\n
              CREATE TABLE IF NOT EXISTS event_log (eventid text not null PRIMARY KEY, eventname text not null, userid text not null, info json NOT NULL);" > /init/script
        - name: run-init
          image: peteqproj/usql
          imagePullPolicy: Always
          command:
          - "usql"
          args:
          - postgres://amazinguser:perfectpassword@local-postgres/awesomedb?sslmode=disable
          - "--file=/init/script"
          volumeMounts:
            - mountPath: /init
              name: script
        - name: seed-demo
          image: peteqproj/seed
          imagePullPolicy: Always
          env:
          - name: URL
            value: "http://ambassador.ambassador.svc.cluster.local"
      containers:
      - image: alpine
        name: exit-0
      restartPolicy: OnFailure